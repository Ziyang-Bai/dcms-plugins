Распаковать архив в корне хоста,код:

if ($_SERVER['PHP_SELF'] != '/adm_panel/mysql.php')
     {     require(H.'sys/classes/AntiHack.class.php');
     $lq = new AntiHack;

       if (isset($_GET))$_GET = $lq->filter($_GET, 'get');
       if (isset($_POST))$_POST = $lq->filter($_POST, 'post');
       if (isset($_FILES))$_FILES = $lq->filter($_FILES, 'files');
       if (isset($_COOKIE))$_COOKIE = $lq->filter($_COOKIE, 'cookie');
       if (isset($_SERVER))$_SERVER = $lq->filter($_SERVER, 'server');
       if (isset($_REQUEST))$_REQUEST = $lq->filter($_REQUEST, 'request');
     unset($lq);
     }
	 
разместить в самом низу файла user.php перед ?> по пути sys/inc/user.php
Вот и се ваш сайт под защитой от шеллов и иньекций)
  
Описание:Очень простой и шустрый класс фильтрации глобальных переменных на предмет sql inj и xss, обеспечивающий безопасность передаваемых пользователями данных. Прост в установке.
secure Технологии не стоят на месте, поэтому 100% уверенности в безопасности вашего ресурса после установки класса дать не могу. процентов 95% ))
notice Целиком не претендую на авторство. В классе использованы и чужие, свободно распостраняемые наработки. Цена лишь за мое исполнение. Возникнут вопросы после покупки, всегда буду рад помочь советом. Безопасность, одна из самых важных состовляющих ресурса.
===============
fix Обновлен 18.06.2013г :
Исправил ошибку, при которой удалялись некоторые символы в POST данных.
fix Обновлен 12.07.2013г :
Поправил трудность с передачей цифры ноль. Теперь она не теряется.
fix Обновлен 02.09.2013
Добавил строку, которая обезвредит распостраненную в играх, зашифрованную форму выгрузки шелл.
fix Обновлен 10.09.2013
Многие забывают фильтровать данные, выводимые в формах ввода текста. Обновление решает эту проблему.
fix Обновлен 04.10.2013
Исправлена ошибка, при которой нельзя было выгрузить файлы с названием на русском языке. Разрешил некоторые неопасные символы в get параметрах.